---

- name: escape custom endpoint url colons
  ansible.builtin.set_fact: "custom_endpoint_escaped={{ bucket_options.custom_endpoint_url | regex_replace (':','\\:') }}"
  when: custom_endpoint_url | length > 0

- name: create localstack bucket for testing
  ansible.builtin.shell: 'aws --endpoint={{ bucket_options.custom_endpoint_escaped }} s3 mb s3://{{ bucket_options.bucket_name }}'
  when: custom_endpoint_url | length > 0

- name: place CORS.json
  ansible.builtin.copy:
    src: cors.json
    dest: /tmp/cors.json
    owner: root
    group: root
    mode: '0644'

- name: set CORS on bucket when upload_redirect is true
  ansible.builtin.shell: 'aws s3api put-bucket-cors --bucket {{ bucket_options.bucket_name }} --cors-configuration file://tmp/cors.json'
  when: upload_redirect = true

- name: set Payara JVM options  
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  ansible.builtin.shell: "{{ payara_dir }}/bin/asadmin create-jvm-options -Ddataverse.{{ label }}.{{ item.key }}={{ item.value}}"
  with_items:
    - { 'key': 'type' , ' value': 's3' }
    - { 'key': 'label' , 'value': '{{ bucket_options.label }}' }
    - { 'key': 'bucket-name' , 'value': '{{ bucket_options.bucket_name }}' }
    - { 'key': 'custom-endpoint-url' , 'value': '{{ bucket_options.custom_endpoint_url }}' }
    - { 'key': 'custom-endpoint-region' , 'value': '{{ bucket_options.custom_endpoint_region }}' }
    - { 'key': 'path-style-access' , 'value': '{{ bucket_options.path_style_access }}' }
    - { 'key': 'upload-redirect' , 'value': '{{ bucket_options.upload_redirect }}' }
    - { 'key': 'download-redirect' , 'value': '{{ bucket_options.download_redirect }}' }
    - { 'key': 'access-key' , 'value': '{{ bucket_options.access_key }}' }
    - { 'key': 'secret-access-key' , 'value': '{{ bucket_options.secret_access_key }}' }
