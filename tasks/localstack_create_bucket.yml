---

- name: escape custom endpoint url colons
  ansible.builtin.set_fact: "custom_endpoint_escaped={{ outer.custom_endpoint_url | regex_replace (':','\\:') }}"
  when: outer.custom_endpoint_url | length > 0

- name: create localstack bucket for testing
  ansible.builtin.shell: 'aws --endpoint={{ custom_endpoint_escaped }} s3 mb s3://{{ outer.bucket_name }}'
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  when: outer.custom_endpoint_url | length > 0

- name: place CORS.json
  ansible.builtin.copy:
    src: cors.json
    dest: /tmp/cors.json
    owner: root
    group: root
    mode: '0644'

- name: set CORS on bucket when upload_redirect is true
  ansible.builtin.shell: 'aws s3api put-bucket-cors --bucket {{ outer.bucket_name }} --cors-configuration file://tmp/cors.json'
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  when: outer.upload_redirect == true

- name: set Payara JVM options  
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  ansible.builtin.shell: "{{ payara_dir }}/bin/asadmin create-jvm-options -Ddataverse.{{ outer.label }}.{{ item.key }}={{ item.value }}"
  with_items:
    - { type : 's3' }
    - { label : '{{ outer.label }}' }
    - { bucket-name : '{{ outer.bucket_name }}' }
    - { custom-endpoint-url : '{{ outer.custom_endpoint_url }}' }
    - { region : '{{ outer.region }}' }
    - { path-style-access : '{{ outer.path_style_access }}' }
    - { upload-redirect : '{{ outer.upload_redirect }}' }
    - { download-redirect : '{{ outer.download_redirect }}' }
    - { access-key : '{{ outer.access_key }}' }
    - { secret-access-key : '{{ outer.secret_access_key }}' }
