---

- name: escape custom endpoint url colons
  ansible.builtin.set_fact: "custom_endpoint_escaped={{ outer.custom_endpoint_url | regex_replace (':','\\:') }}"
  when: outer.custom_endpoint_url | length > 0

- name: create localstack bucket for testing
  ansible.builtin.shell: 'aws --endpoint={{ custom_endpoint_escaped }} s3 mb s3://{{ outer.bucket_name }}'
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  when: outer.custom_endpoint_url | length > 0

- name: place CORS.json
  ansible.builtin.copy:
    src: cors.json
    dest: /tmp/cors.json
    owner: root
    group: root
    mode: '0644'

- name: set CORS on bucket when upload_redirect is true
  ansible.builtin.shell: 'aws s3api put-bucket-cors --bucket {{ outer.bucket_name }} --cors-configuration file://tmp/cors.json'
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  when: outer.upload_redirect == true

- name: debug
  ansible.builtin.debug:
    msg: '{{ outer }}'

- name: create jvm-options dictionary
  set_fact:
    jvm-options: "{{ outer | default({}) | combine ({ item.key : item.value }) }}"
  with_items:
    - { 'key' : 'type' , 'value' : 's3' }
    - { 'key' : 'label' , 'value' : '{{ outer.label }}' }
    - { 'key' : 'bucket-name' , 'value' : '{{ outer.bucket_name }}' }
    - { 'key' : 'custom-endpoint-url' , 'value' : '{{ outer.custom_endpoint_url }}' }
    - { 'key' : 'region' , 'value' : '{{ outer.region }}' }
    - { 'key' : 'path-style-access' , 'value' : '{{ outer.path_style_access }}' }
    - { 'key' : 'upload-redirect' , 'value' : '{{ outer.upload_redirect }}' }
    - { 'key' : 'download-redirect' , 'value' : '{{ outer.download_redirect }}' }
    - { 'key' : 'access-key' , 'value' : '{{ outer.access_key }}' }
    - { 'key' : 'secret-access-key' , 'value' : '{{ outer.secret_access_key }}' }

- name: debug
  ansible.builtin.debug:
    msg: '{{ jvm-options }}'

- name: set Payara JVM options
  become: yes
  become_user: '{{ dataverse.payara.user }}'
  ansible.builtin.shell: '{{ payara_dir }}/bin/asadmin create-jvm-options "-Ddataverse.{{ outer.label }}.{{ item.key }}={{ item.value }}"'
  loop: "{{ lookup('dict', jvm-options) }}"
