---

# dataverse/tasks/dataverse-postinstall.yml

- name: postinstall payara configuration
  debug:
    msg: '##### POST-INSTALL PAYARA CONFIGURATION #####'

# this will fail if not run on localhost; it's only a logging format.
- name: set logging format
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: "{{ payara_dir }}/bin/asadmin set-log-file-format {{ dataverse.payara.logformat }}"
  ignore_errors: yes

- name: stage custom metadata blocks
  file:
    path: /tmp/dataverse/custom_metadata_blocks
    state: directory
  when: dataverse.custom_metadata_blocks.enabled == True

- name: grab custom metadata blocks
  get_url:
    url: '{{ item }}'
    dest: /tmp/dataverse/custom_metadata_blocks
  loop: '{{ dataverse.custom_metadata_blocks.urls }}'
  when: dataverse.custom_metadata_blocks.enabled == True

- name: read custom metadata block list
  find:
    path: /tmp/dataverse/custom_metadata_blocks
  register: custom_metadata_block_list

- name: load custom metadata blocks
  uri:
    url: http://localhost:8080/api/admin/datasetfield/load
    method: POST
    headers:
      Content-type: 'text/tab-separated-values'
    src: '{{ item.path }}'
    remote_src: yes
  loop: '{{ custom_metadata_block_list.files }}'
  when: dataverse.custom_metadata_blocks.enabled == True

- name: update custom metadata blocks
  shell: '/tmp/dvinstall/updateSchemaMDB.sh -t {{ dataverse.solr.root }}/server/solr/collection1/conf'
  become: yes
  become_user: '{{ dataverse.solr.user }}'
  when: dataverse.custom_metadata_blocks.enabled == True

# integration tests require these
# createsequence.sql went AWOL. wedge in local copy.
- name: support sequential identifiers fetch current SQL script
  copy:
    #url: http://guides.dataverse.org/en/{{ dataverse.version if dataverse_branch == 'release' else 'latest' }}/_downloads/createsequence.sql
    src: createsequence.sql
    dest: /tmp/createsequence.sql
    mode: '0644'

- name: "support sequential identifiers use db.user"
  lineinfile:
    path: /tmp/createsequence.sql
    regexp: '^ALTER TABLE datasetidentifier_seq OWNER TO "dvnapp"'
    line: 'ALTER TABLE datasetidentifier_seq OWNER TO "{{ db.postgres.user }}";'

- name: support sequential identifiers
  shell: "psql -U {{ db.postgres.user }} -h {{ db.postgres.host }} -d {{ db.postgres.name }} -f /tmp/createsequence.sql"
  environment:
    PGPASSWORD: "{{ db.postgres.pass }}"
  
- name: suppress grizzly ajp warnings
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: "{{ payara_dir }}/bin/asadmin set-log-levels org.glassfish.grizzly.http.server.util.RequestUtils=SEVERE"

- name: override some default settings
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: 'curl -X PUT -d "{{item.val}}" "{{ dataverse.api.location }}/admin/settings/{{item.prop}}"'
  with_items:
    - { prop: ":GoogleAnalyticsCode", val: "{{ dataverse.google_analytics_key }}", desc: "key for Google Analytics"}
    - { prop: ":FooterCopyright" , val: "{{ dataverse.copyright }}", desc: "addition to the default copyright statement"}
    - { prop: ":SystemEmail", val: "{{ dataverse.service_email }}", desc: "instance email address"}
    - { prop: ":Protocol", val: "{{ dataverse.doi.protocol }}", desc: "global identifier protocol"}
    - { prop: ":DoiProvider", val: "{{ dataverse.doi.provider }}", desc: "DOI service provider (EZID or DataCite)"}
    - { prop: ":Authority", val: "{{ dataverse.doi.authority }}", desc: "DOI prefix"}
    - { prop: ":Shoulder", val: "{{ dataverse.doi.shoulder }}", desc: "DOI shoulder."}
    - { prop: ":ShibEnabled", val: "{{ shibboleth.enabled }}", desc: "enable/disable shibboleth" }
    - { prop: ":AllowSignUp", val: "{{ dataverse.allow_signups }}", desc: "don't allow self-signup"}
    - { prop: ":BlockedApiEndpoints", val: "admin,test", desc: "APIs that are controlled"}
    - { prop: ":BlockedApiPolicy", val: "localhost-only", desc: "control API access"}
    - { prop: ":FileFixityChecksumAlgorithm", val: "{{ dataverse.file_fixity_checksum_algorithm }}", desc: "checksum algorithm used for file fixity" }

- include: dataverse-optional-settings.yml

- name: final payara post-configuration restart
  service:
    name: payara
    state: restarted
