---

# dataverse/tasks/dataverse-postinstall.yml

- name: postinstall payara configuration
  debug:
    msg: '##### POST-INSTALL PAYARA CONFIGURATION #####'

# this will fail if not run on localhost; it's only a logging format.
- name: set logging format
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: "{{ payara_dir }}/bin/asadmin set-log-file-format {{ dataverse.payara.logformat }}"
  #ignore_errors: yes

- include: custom_metadata_blocks.yml
  when: dataverse.custom_metadata_blocks.enabled == True

- name: suppress grizzly ajp warnings
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: "{{ payara_dir }}/bin/asadmin set-log-levels org.glassfish.grizzly.http.server.util.RequestUtils=SEVERE"

- name: override some default settings
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  shell: 'curl -X PUT -d "{{item.val}}" "{{ dataverse.api.location }}/admin/settings/{{item.prop}}"'
  with_items:
    - { prop: ":GoogleAnalyticsCode", val: "{{ dataverse.google_analytics_key }}", desc: "key for Google Analytics"}
    - { prop: ":FooterCopyright" , val: "{{ dataverse.copyright }}", desc: "addition to the default copyright statement"}
    - { prop: ":SystemEmail", val: "{{ dataverse.service_email }}", desc: "instance email address"}
    - { prop: ":Protocol", val: "{{ dataverse.doi.protocol }}", desc: "global identifier protocol"}
    - { prop: ":DoiProvider", val: "{{ dataverse.doi.provider }}", desc: "DOI service provider (EZID or DataCite)"}
    - { prop: ":Authority", val: "{{ dataverse.doi.authority }}", desc: "DOI prefix"}
    - { prop: ":Shoulder", val: "{{ dataverse.doi.shoulder }}", desc: "DOI shoulder."}
    - { prop: ":ShibEnabled", val: "{{ shibboleth.enabled }}", desc: "enable/disable shibboleth" }
    - { prop: ":AllowSignUp", val: "{{ dataverse.allow_signups }}", desc: "don't allow self-signup"}
    - { prop: ":BlockedApiEndpoints", val: "admin,test", desc: "APIs that are controlled"}
    - { prop: ":BlockedApiPolicy", val: "localhost-only", desc: "control API access"}
    - { prop: ":FileFixityChecksumAlgorithm", val: "{{ dataverse.file_fixity_checksum_algorithm }}", desc: "checksum algorithm used for file fixity" }

- include: dataverse-optional-settings.yml

- name: final payara post-configuration cleanup
  service:
    name: payara
    state: stopped

- name: repair logging.properties on payara-5.2021.5
  copy:
    src: logging.properties
    dest: '{{ payara_dir }}/glassfish/domains/{{ dataverse.payara.domain }}/config/logging.properties'
    owner: '{{ dataverse.payara.user }}'
    group: '{{ dataverse.payara.group }}'
    mode: 0644
  when: dataverse.payara.zipurl is match(".*payara-5.2021.5.zip")

- name: remove JNDI lookups from log4j-1.2
  become: yes
  become_user: '{{ dataverse.payara.user }}'
  shell: 'zip -d {{ payara_dir }}/glassfish/domains/{{ dataverse.payara.domain }}/applications/dataverse/WEB-INF/lib/log4j-1.2.14.jar org/apache/log4j/net/JMSAppender.class'

- name: start payara
  service:
    name: payara
    state: started
